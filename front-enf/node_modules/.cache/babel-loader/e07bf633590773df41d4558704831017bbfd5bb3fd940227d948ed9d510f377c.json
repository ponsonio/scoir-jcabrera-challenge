{"ast":null,"code":"var _jsxFileName = \"/Users/koki/go/src/github.com/ponsonio/scoir-jcabrera-challenge/front-enf/src/App.js\";\nimport NewLogin from \"./component/form/NewLogin\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const onLoginHandler = async data => {\n    console.log(\"data\", data);\n    try {\n      let res = await fetch(\"http://localhost:8080/login/\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          User: data.enteredUserName,\n          Password: data.enteredUserPassword\n        })\n      });\n      console.log(\"res\", res);\n      if (res.status === 200) {\n        let resJson = await res.json();\n        console.log(\"200 res\", resJson);\n      }\n    } catch (err) {\n      console.log(\"catch\", err.statusText);\n      console.log(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(NewLogin, {\n      onLoginHandler: onLoginHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["NewLogin","jsxDEV","_jsxDEV","App","onLoginHandler","data","console","log","res","fetch","method","body","JSON","stringify","User","enteredUserName","Password","enteredUserPassword","status","resJson","json","err","statusText","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/koki/go/src/github.com/ponsonio/scoir-jcabrera-challenge/front-enf/src/App.js"],"sourcesContent":["import NewLogin from \"./component/form/NewLogin\";\n\nfunction App() {\n  const onLoginHandler = async (data) => {\n    console.log(\"data\", data);\n    try {\n      let res = await fetch(\"http://localhost:8080/login/\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          User: data.enteredUserName,\n          Password: data.enteredUserPassword,\n        }),\n      });\n      console.log(\"res\", res);\n      if (res.status === 200) {\n        let resJson = await res.json();\n        console.log(\"200 res\", resJson);\n      }\n    } catch (err) {\n      console.log(\"catch\", err.statusText);\n      console.log(err);\n    }\n  };\n\n  return (\n    <div>\n      <NewLogin onLoginHandler={onLoginHandler} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,QAAQ,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,GAAGA,CAAA,EAAG;EACb,MAAMC,cAAc,GAAG,MAAOC,IAAI,IAAK;IACrCC,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEF,IAAI,CAAC;IACzB,IAAI;MACF,IAAIG,GAAG,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;QACpDC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,IAAI,EAAET,IAAI,CAACU,eAAe;UAC1BC,QAAQ,EAAEX,IAAI,CAACY;QACjB,CAAC;MACH,CAAC,CAAC;MACFX,OAAO,CAACC,GAAG,CAAC,KAAK,EAAEC,GAAG,CAAC;MACvB,IAAIA,GAAG,CAACU,MAAM,KAAK,GAAG,EAAE;QACtB,IAAIC,OAAO,GAAG,MAAMX,GAAG,CAACY,IAAI,EAAE;QAC9Bd,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEY,OAAO,CAAC;MACjC;IACF,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZf,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEc,GAAG,CAACC,UAAU,CAAC;MACpChB,OAAO,CAACC,GAAG,CAACc,GAAG,CAAC;IAClB;EACF,CAAC;EAED,oBACEnB,OAAA;IAAAqB,QAAA,eACErB,OAAA,CAACF,QAAQ;MAACI,cAAc,EAAEA;IAAe;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAG;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACxC;AAEV;AAACC,EAAA,GA3BQzB,GAAG;AA6BZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}